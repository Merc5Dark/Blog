{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KUSANAGI\\\\Videos\\\\BlogPost-main\\\\front-end\\\\src\\\\features\\\\posts\\\\PostsExcerpt.js\",\n  _s = $RefreshSig$();\nimport PostAuthor from \"./PostAuthor\";\nimport TimeAgo from \"./TimeAgo\";\nimport ReactionButtons from \"./ReactionButtons\";\nimport { Link } from 'react-router-dom';\nimport { useGetPostsQuery } from './postsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsExcerpt = ({\n  postId\n}) => {\n  _s();\n  const {\n    post\n  } = useGetPostsQuery('getPosts', {\n    selectFromResult: ({\n      data\n    }) => ({\n      post: data === null || data === void 0 ? void 0 : data.entities[postId]\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"excerpt\",\n      children: [post.body.substring(0, 75), \"...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"postCredit\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `post/${post.id}`,\n        children: \"View Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostAuthor, {\n        userId: post.userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimeAgo, {\n        timestamp: post.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactionButtons, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(PostsExcerpt, \"eCV2qD7HvS/a87y6aTuQQf6yK4Q=\", false, function () {\n  return [useGetPostsQuery];\n});\n_c = PostsExcerpt;\nexport default PostsExcerpt;\nvar _c;\n$RefreshReg$(_c, \"PostsExcerpt\");","map":{"version":3,"names":["PostAuthor","TimeAgo","ReactionButtons","Link","useGetPostsQuery","jsxDEV","_jsxDEV","PostsExcerpt","postId","_s","post","selectFromResult","data","entities","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","body","substring","to","id","userId","timestamp","date","_c","$RefreshReg$"],"sources":["C:/Users/KUSANAGI/Videos/BlogPost-main/front-end/src/features/posts/PostsExcerpt.js"],"sourcesContent":["import PostAuthor from \"./PostAuthor\";\nimport TimeAgo from \"./TimeAgo\";\nimport ReactionButtons from \"./ReactionButtons\";\nimport { Link } from 'react-router-dom';\nimport { useGetPostsQuery } from './postsSlice';\n\nconst PostsExcerpt = ({ postId }) => {\n\n    const { post } = useGetPostsQuery('getPosts', {\n        selectFromResult: ({ data }) => ({\n            post: data?.entities[postId]\n        }),\n    })\n\n    return (\n        <article>\n            <h2>{post.title}</h2>\n            <p className=\"excerpt\">{post.body.substring(0, 75)}...</p>\n            <p className=\"postCredit\">\n                <Link to={`post/${post.id}`}>View Post</Link>\n                <PostAuthor userId={post.userId} />\n                <TimeAgo timestamp={post.date} />\n            </p>\n            <ReactionButtons post={post} />\n        </article>\n    )\n}\n\nexport default PostsExcerpt"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,gBAAgB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAEjC,MAAM;IAAEC;EAAK,CAAC,GAAGN,gBAAgB,CAAC,UAAU,EAAE;IAC1CO,gBAAgB,EAAEA,CAAC;MAAEC;IAAK,CAAC,MAAM;MAC7BF,IAAI,EAAEE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACL,MAAM;IAC/B,CAAC;EACL,CAAC,CAAC;EAEF,oBACIF,OAAA;IAAAQ,QAAA,gBACIR,OAAA;MAAAQ,QAAA,EAAKJ,IAAI,CAACK;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBb,OAAA;MAAGc,SAAS,EAAC,SAAS;MAAAN,QAAA,GAAEJ,IAAI,CAACW,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC,KAAG;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC1Db,OAAA;MAAGc,SAAS,EAAC,YAAY;MAAAN,QAAA,gBACrBR,OAAA,CAACH,IAAI;QAACoB,EAAE,EAAG,QAAOb,IAAI,CAACc,EAAG,EAAE;QAAAV,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7Cb,OAAA,CAACN,UAAU;QAACyB,MAAM,EAAEf,IAAI,CAACe;MAAO;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCb,OAAA,CAACL,OAAO;QAACyB,SAAS,EAAEhB,IAAI,CAACiB;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACJb,OAAA,CAACJ,eAAe;MAACQ,IAAI,EAAEA;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAElB,CAAC;AAAAV,EAAA,CApBKF,YAAY;EAAA,QAEGH,gBAAgB;AAAA;AAAAwB,EAAA,GAF/BrB,YAAY;AAsBlB,eAAeA,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}