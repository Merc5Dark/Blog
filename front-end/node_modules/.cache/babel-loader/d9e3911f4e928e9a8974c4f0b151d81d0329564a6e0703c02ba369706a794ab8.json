{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KUSANAGI\\\\Videos\\\\BlogPost-main\\\\front-end\\\\src\\\\features\\\\posts\\\\AddPostForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAddNewPostMutation } from \"./postsSlice\";\nimport { useGetUsersQuery } from \"../users/usersSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPostForm = () => {\n  _s();\n  const [addNewPost, {\n    isLoading\n  }] = useAddNewPostMutation();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setUserId] = useState('');\n  const {\n    data: users,\n    isSuccess\n  } = useGetUsersQuery('getUsers');\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onAuthorChanged = e => setUserId(e.target.value);\n  const canSave = [title, content, userId].every(Boolean) && !isLoading;\n  const onSavePostClicked = async () => {\n    if (canSave) {\n      try {\n        await addNewPost({\n          title,\n          body: content,\n          userId\n        }).unwrap();\n        setTitle('');\n        setContent('');\n        setUserId('');\n        navigate('/');\n      } catch (err) {\n        console.error('Failed to save the post', err);\n      }\n    }\n  };\n  let usersOptions;\n  if (isSuccess) {\n    usersOptions = users.ids.map(id => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: id,\n      children: users.entities[id].name\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postAuthor\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"postAuthor\",\n        value: userId,\n        onChange: onAuthorChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), usersOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        disabled: !canSave,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(AddPostForm, \"4TiDEP/e1Kk+7zB1F7PM6X/PQSw=\", false, function () {\n  return [useAddNewPostMutation, useNavigate, useGetUsersQuery];\n});\n_c = AddPostForm;\nexport default AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["useState","useNavigate","useAddNewPostMutation","useGetUsersQuery","jsxDEV","_jsxDEV","AddPostForm","_s","addNewPost","isLoading","navigate","title","setTitle","content","setContent","userId","setUserId","data","users","isSuccess","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","canSave","every","Boolean","onSavePostClicked","body","unwrap","err","console","error","usersOptions","ids","map","id","children","entities","name","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/KUSANAGI/Videos/BlogPost-main/front-end/src/features/posts/AddPostForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAddNewPostMutation } from \"./postsSlice\";\nimport { useGetUsersQuery } from \"../users/usersSlice\";\n\nconst AddPostForm = () => {\n    const [addNewPost, { isLoading }] = useAddNewPostMutation()\n\n    const navigate = useNavigate()\n\n    const [title, setTitle] = useState('')\n    const [content, setContent] = useState('')\n    const [userId, setUserId] = useState('')\n\n    const { data: users, isSuccess } = useGetUsersQuery('getUsers')\n\n    const onTitleChanged = e => setTitle(e.target.value)\n    const onContentChanged = e => setContent(e.target.value)\n    const onAuthorChanged = e => setUserId(e.target.value)\n\n\n    const canSave = [title, content, userId].every(Boolean) && !isLoading;\n\n    const onSavePostClicked = async () => {\n        if (canSave) {\n            try {\n                await addNewPost({ title, body: content, userId }).unwrap()\n\n                setTitle('')\n                setContent('')\n                setUserId('')\n                navigate('/')\n            } catch (err) {\n                console.error('Failed to save the post', err)\n            }\n        }\n    }\n\n    let usersOptions\n    if (isSuccess) {\n        usersOptions = users.ids.map(id => (\n            <option key={id} value={id}>\n                {users.entities[id].name}\n            </option>\n        ))\n    }\n\n    return (\n        <section>\n            <h2>Add a New Post</h2>\n            <form>\n                <label htmlFor=\"postTitle\">Post Title:</label>\n                <input\n                    type=\"text\"\n                    id=\"postTitle\"\n                    name=\"postTitle\"\n                    value={title}\n                    onChange={onTitleChanged}\n                />\n                <label htmlFor=\"postAuthor\">Author:</label>\n                <select id=\"postAuthor\" value={userId} onChange={onAuthorChanged}>\n                    <option value=\"\"></option>\n                    {usersOptions}\n                </select>\n                <label htmlFor=\"postContent\">Content:</label>\n                <textarea\n                    id=\"postContent\"\n                    name=\"postContent\"\n                    value={content}\n                    onChange={onContentChanged}\n                />\n                <button\n                    type=\"button\"\n                    onClick={onSavePostClicked}\n                    disabled={!canSave}\n                >Save Post</button>\n            </form>\n        </section>\n    )\n}\nexport default AddPostForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}